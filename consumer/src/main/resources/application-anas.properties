quarkus.http.port=9898

#Tracing
quarkus.otel.exporter.otlp.traces.endpoint=http://localhost:4317
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, [%c{5.}] (%t) %s%e%n
quarkus.console.color=true
#DB
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=postgres
quarkus.datasource.password=postgres
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5432/postgres
quarkus.hibernate-orm.database.default-schema=price

#quarkus.datasource.db-kind=postgresql
#quarkus.datasource.username=${DB_USERNAME:SA}
#quarkus.datasource.password=${DB_PASSWORD:P@ssw0rd123}
#quarkus.datasource.jdbc.url=jdbc:postgresql://${DB_HOST:192.168.1.33}:5432/${DB_NAME:SA}
#quarkus.hibernate-orm.database.default-schema=price
##quarkus.datasource.reactive.url = vertx-reactive:postgresql://localhost:5432/postgres
#quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.database.generation=update
quarkus.hibernate-orm.log.sql=false
quarkus.datasource.jdbc.max-size=8
quarkus.datasource.jdbc.min-size=2
quarkus.hibernate-orm.physical-naming-strategy=org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy

# Kafka
# The Kafka broker location (defaults to localhost:9092)
kafka.bootstrap.servers=localhost:29092

# Configuring the outgoing channel (writing request to Kafka)
#mp.messaging.incoming.price-engine-requests.connector=smallrye-kafka
#mp.messaging.incoming.price-engine-requests.commit-strategy=throttled
#mp.messaging.incoming.price-engine-requests.error-handling-strategy=dead-letter-queue
#mp.messaging.incoming.price-engine-requests.dead-letter-topic=price-engine-requests-dead
#mp.messaging.incoming.price-engine-requests.topic=price-engine-request
#mp.messaging.incoming.price-engine-requests.key.deserializer=org.apache.kafka.common.serialization.UUIDDeserializer
#mp.messaging.incoming.price-engine-requests.value.deserializer=io.quarkus.kafka.client.serialization.ObjectMapperDeserializer

# Configuring the outgoing channel (writing response to Kafka)
mp.messaging.incoming.price-engine-responses.connector=smallrye-kafka
mp.messaging.incoming.price-engine-responses.commit-strategy=throttled
mp.messaging.incoming.price-engine-responses.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-responses.error-handling-strategy=dead-letter-queue
#mp.messaging.incoming.price-engine-responses.dead-letter-topic=price-engine-response-dead
mp.messaging.incoming.price-engine-responses.topic=price-engine-response
mp.messaging.incoming.price-engine-responses.key.deserializer=org.apache.kafka.common.serialization.UUIDDeserializer

# Configuring the outgoing channel (writing failure response to Kafka)
mp.messaging.incoming.price-engine-failure-responses.connector=smallrye-kafka
mp.messaging.incoming.price-engine-failure-responses.commit-strategy=throttled
mp.messaging.incoming.price-engine-failure-responses.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-failure-responses.error-handling-strategy=dead-letter-queue
mp.messaging.incoming.price-engine-failure-responses.topic=price-engine-failure-response
mp.messaging.incoming.price-engine-failure-responses.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer

# Configuring the outgoing channel (writing logs response to Kafka)
mp.messaging.incoming.price-engine-logs.connector=smallrye-kafka
mp.messaging.incoming.price-engine-logs.commit-strategy=throttled
mp.messaging.incoming.price-engine-logs.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-logs.error-handling-strategy=dead-letter-queue
mp.messaging.incoming.price-engine-logs.topic=price-engine-log
mp.messaging.incoming.price-engine-logs.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer

# Configuring the outgoing channel (writing logs response to Kafka)
mp.messaging.incoming.price-engine-facts.connector=smallrye-kafka
mp.messaging.incoming.price-engine-facts.commit-strategy=throttled
mp.messaging.incoming.price-engine-facts.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-facts.error-handling-strategy=dead-letter-queue
mp.messaging.incoming.price-engine-facts.topic=price-engine-fact
mp.messaging.incoming.price-engine-facts.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer

# Configuring the incoming channel (writing logs response to Kafka)
mp.messaging.incoming.price-cache-management.connector=smallrye-kafka
mp.messaging.incoming.price-cache-management.auto.commit=true
mp.messaging.incoming.price-cache-management.group.id=${quarkus.uuid}
mp.messaging.incoming.price-cache-management.topic=price-cache-management
mp.messaging.incoming.price-cache-management.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer


## Qatar

# Configuring the outgoing channel (writing response to Kafka)
mp.messaging.incoming.price-engine-responses-qatar.connector=smallrye-kafka
mp.messaging.incoming.price-engine-responses-qatar.commit-strategy=throttled
mp.messaging.incoming.price-engine-responses-qatar.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-responses-qatar.error-handling-strategy=dead-letter-queue
#mp.messaging.incoming.price-engine-responses.dead-letter-topic=price-engine-response-dead
mp.messaging.incoming.price-engine-responses-qatar.topic=price-engine-response-qatar
mp.messaging.incoming.price-engine-responses-qatar.key.deserializer=org.apache.kafka.common.serialization.UUIDDeserializer

# Configuring the outgoing channel (writing failure response to Kafka)
mp.messaging.incoming.price-engine-failure-responses-qatar.connector=smallrye-kafka
mp.messaging.incoming.price-engine-failure-responses-qatar.commit-strategy=throttled
mp.messaging.incoming.price-engine-failure-responses-qatar.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-failure-responses-qatar.error-handling-strategy=dead-letter-queue
mp.messaging.incoming.price-engine-failure-responses-qatar.topic=price-engine-failure-response-qatar
mp.messaging.incoming.price-engine-failure-responses-qatar.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer

# Configuring the outgoing channel (writing logs response to Kafka)
mp.messaging.incoming.price-engine-logs-qatar.connector=smallrye-kafka
mp.messaging.incoming.price-engine-logs-qatar.commit-strategy=throttled
mp.messaging.incoming.price-engine-logs-qatar.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-logs-qatar.error-handling-strategy=dead-letter-queue
mp.messaging.incoming.price-engine-logs-qatar.topic=price-engine-log-qatar
mp.messaging.incoming.price-engine-logs-qatar.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer

# Configuring the outgoing channel (writing logs response to Kafka)
mp.messaging.incoming.price-engine-facts-qatar.connector=smallrye-kafka
mp.messaging.incoming.price-engine-facts-qatar.commit-strategy=throttled
mp.messaging.incoming.price-engine-facts-qatar.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-facts-qatar.error-handling-strategy=dead-letter-queue
mp.messaging.incoming.price-engine-facts-qatar.topic=price-engine-fact-qatar
mp.messaging.incoming.price-engine-facts-qatar.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer



# Configuring the incoming channel (writing logs response to Kafka)
mp.messaging.incoming.price-cache-management-qatar.connector=smallrye-kafka
mp.messaging.incoming.price-cache-management-qatar.auto.commit=true
mp.messaging.incoming.price-cache-management-qatar.group.id=${quarkus.uuid}
mp.messaging.incoming.price-cache-management-qatar.topic=price-cache-management-qatar
mp.messaging.incoming.price-cache-management-qatar.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

## KSA

# Configuring the outgoing channel (writing response to Kafka)
mp.messaging.incoming.price-engine-responses-ksa.connector=smallrye-kafka
mp.messaging.incoming.price-engine-responses-ksa.commit-strategy=throttled
mp.messaging.incoming.price-engine-responses-ksa.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-responses-ksa.error-handling-strategy=dead-letter-queue
#mp.messaging.incoming.price-engine-responses.dead-letter-topic=price-engine-response-dead
mp.messaging.incoming.price-engine-responses-ksa.topic=price-engine-response-ksa
mp.messaging.incoming.price-engine-responses-ksa.key.deserializer=org.apache.kafka.common.serialization.UUIDDeserializer

# Configuring the outgoing channel (writing failure response to Kafka)
mp.messaging.incoming.price-engine-failure-responses-ksa.connector=smallrye-kafka
mp.messaging.incoming.price-engine-failure-responses-ksa.commit-strategy=throttled
mp.messaging.incoming.price-engine-failure-responses-ksa.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-failure-responses-ksa.error-handling-strategy=dead-letter-queue
mp.messaging.incoming.price-engine-failure-responses-ksa.topic=price-engine-failure-response-ksa
mp.messaging.incoming.price-engine-failure-responses-ksa.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer

# Configuring the outgoing channel (writing logs response to Kafka)
mp.messaging.incoming.price-engine-logs-ksa.connector=smallrye-kafka
mp.messaging.incoming.price-engine-logs-ksa.commit-strategy=throttled
mp.messaging.incoming.price-engine-logs-ksa.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-logs-ksa.error-handling-strategy=dead-letter-queue
mp.messaging.incoming.price-engine-logs-ksa.topic=price-engine-log-ksa
mp.messaging.incoming.price-engine-logs-ksa.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer

# Configuring the outgoing channel (writing logs response to Kafka)
mp.messaging.incoming.price-engine-facts-ksa.connector=smallrye-kafka
mp.messaging.incoming.price-engine-facts-ksa.commit-strategy=throttled
mp.messaging.incoming.price-engine-facts-ksa.auto.offset.reset = earliest
mp.messaging.incoming.price-engine-facts-ksa.error-handling-strategy=dead-letter-queue
mp.messaging.incoming.price-engine-facts-ksa.topic=price-engine-fact-ksa
mp.messaging.incoming.price-engine-facts-ksa.key.serializer=org.apache.kafka.common.serialization.UUIDSerializer


# Configuring the incoming channel (writing logs response to Kafka)
mp.messaging.incoming.price-cache-management-ksa.connector=smallrye-kafka
mp.messaging.incoming.price-cache-management-ksa.auto.commit=true
mp.messaging.incoming.price-cache-management-ksa.group.id=${quarkus.uuid}
mp.messaging.incoming.price-cache-management-ksa.topic=price-cache-management-ksa
mp.messaging.incoming.price-cache-management-ksa.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer




price.cloud.kafka.partition = 8
price.cloud.kafka.replica = 3


